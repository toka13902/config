########################

# prevent space from messing up layouts with crappy TMUX 'standard layouts' in case I accidently hit space
unbind C-b
unbind Space
# the less keys I press, the better, and who needs backtick, I have it mapped to Ctrl+A in my vim anyway.
set-option -g prefix `
set-option -g base-index 1

# Allow mouse to select which pane to use
set -g mouse-select-pane on		# can be useful

# Also needed for mouse copy/paste
set-option -g mouse-select-window on
set-window-option -g mode-mouse on
set-option -g set-clipboard on

# set -g default-terminal "screen-256color"
set -g default-terminal "xterm-256color"

# Default colors
set -g status-bg black
set -g status-fg white

# Inactive windows in status bar
set-window-option -g window-status-format '#[fg=colour240,dim]#I#[fg=blue]:#[fg=colour240,dim]#W'

# Current or active window in status bar
set-window-option -g window-status-current-format '#[bg=colour136,fg=black,bold]#I#[fg=black]:#[fg=colour232]#W#[fg=dim]'

# utf-8 (mouse-utf8 doesn't seem to have any effect on making mouse better)
set -g utf8 on
set -g mouse-utf8 on

# status bar (now handled by powerline)
#set -g status-utf8 on
set -g status-keys emacs	# vi is great, but not in command-line

# tmux-powerline
#set-option -g status on
set-option -g status-interval 30
#set-option -g status-utf8 on
set-option -g status-justify "centre"
set-option -g status-left-length 60
set-option -g status-right-length 90
#set-window-option -g window-status-current-format "#[fg=colour235, bg=colour27]⮀#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour235]⮀"
set-window-option -g window-status-current-format "#[fg=colour27, bg=colour0]⮂#[fg=colour255, bg=colour27] #I ⮁ #W #[fg=colour27, bg=colour0]⮀"

# terminal title emulation (doesn't work when using Putty, but works fine in xterm/gnome-terminal)
set -g set-titles on
set -g set-titles-string "#(tmux ls | awk -F: '{print $1}' | xargs | sed 's/\ / | /g')"

# increse tmux buffer so I can scroll back multiple screens
set -g history-limit 40000

#custom bindings

# C-a = last-window
unbind l
bind C-a last-window
bind '`' last-window

# allows me to move panes around
bind { swap-pane -U
bind } swap-pane -D

# vi-like copy-paste in copy-mode
unbind [
unbind Escape
bind Escape copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# | = horizontal split
unbind %
#bind | split-window -h
bind \ split-window -h

# - = vertical split
unbind '"'
bind '-' split-window -v

# " = choose-window
bind '"' choose-window

# h = display cheatsheet
bind h run "cat ~/.tmux_cheatsheet"

# r = reapply new tmux settings
unbind r
bind r source-file ~/.tmux.conf

# r = respawn after exit or disconnect (zombie)
bind C-r respawn-window

# k = kill after exit or disconnect (zombie)
bind C-k kill-window

#pane movement
bind-key j command-prompt -p "join pane from:"  "join-pane -h -s '%%'"
bind-key s command-prompt -p "send pane from:"  "join-pane -h -t '%%'"
